services:
  postgres:
    container_name: postgres-demo
    image: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: demo_db
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - demo-spring
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U username -d demo_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
  demo-api:
    container_name: demo-api
    image: demo
    ports:
      - 8081:8081
    networks:
      - demo-spring
    depends_on:
      - postgres
  demo-ui:
    container_name: demo-ui
    image: demo-ui
    ports:
      - 4200:80
    networks:
      - demo-spring
    depends_on:
      - demo-api
  keycloak:
    container_name: keycloak-dmo
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - 9090:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-demo
      KC_DB_URL_DATABASE: demo_db
      KC_DB_USERNAME: username
      KC_DB_PASSWORD: password
      KEYCLOAK_HTTP_HEADERS: "Content-Security-Policy: frame-ancestors 'self' http://localhost:4200"
    networks:
      - demo-spring
    depends_on:
      - postgres
    command:
      - "start-dev"
    volumes:
      - ./keycloak.conf:/opt/keycloak/conf/keycloak.conf
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5


networks:
  demo-spring:
    driver: bridge

volumes:
  postgres:
    driver: local
